/**
 * DocSpring API
 * Use DocSpring's API to programmatically fill out PDF forms, convert HTML to PDFs, merge PDFs, or request legally binding e-signatures.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DocSpring);
  }
}(this, function(expect, DocSpring) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DocSpring.Client();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Client', function() {
    describe('addFieldsToTemplate', function() {
      it('should call addFieldsToTemplate successfully', function(done) {
        //uncomment below and update the code to test addFieldsToTemplate
        //instance.addFieldsToTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchGeneratePdfs', function() {
      it('should call batchGeneratePdfs successfully', function(done) {
        //uncomment below and update the code to test batchGeneratePdfs
        //instance.batchGeneratePdfs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('combinePdfs', function() {
      it('should call combinePdfs successfully', function(done) {
        //uncomment below and update the code to test combinePdfs
        //instance.combinePdfs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('copyTemplate', function() {
      it('should call copyTemplate successfully', function(done) {
        //uncomment below and update the code to test copyTemplate
        //instance.copyTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCustomFileFromUpload', function() {
      it('should call createCustomFileFromUpload successfully', function(done) {
        //uncomment below and update the code to test createCustomFileFromUpload
        //instance.createCustomFileFromUpload(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDataRequestEvent', function() {
      it('should call createDataRequestEvent successfully', function(done) {
        //uncomment below and update the code to test createDataRequestEvent
        //instance.createDataRequestEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDataRequestToken', function() {
      it('should call createDataRequestToken successfully', function(done) {
        //uncomment below and update the code to test createDataRequestToken
        //instance.createDataRequestToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFolder', function() {
      it('should call createFolder successfully', function(done) {
        //uncomment below and update the code to test createFolder
        //instance.createFolder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createHtmlTemplate', function() {
      it('should call createHtmlTemplate successfully', function(done) {
        //uncomment below and update the code to test createHtmlTemplate
        //instance.createHtmlTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPdfTemplate', function() {
      it('should call createPdfTemplate successfully', function(done) {
        //uncomment below and update the code to test createPdfTemplate
        //instance.createPdfTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPdfTemplateFromUpload', function() {
      it('should call createPdfTemplateFromUpload successfully', function(done) {
        //uncomment below and update the code to test createPdfTemplateFromUpload
        //instance.createPdfTemplateFromUpload(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFolder', function() {
      it('should call deleteFolder successfully', function(done) {
        //uncomment below and update the code to test deleteFolder
        //instance.deleteFolder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTemplate', function() {
      it('should call deleteTemplate successfully', function(done) {
        //uncomment below and update the code to test deleteTemplate
        //instance.deleteTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('expireCombinedSubmission', function() {
      it('should call expireCombinedSubmission successfully', function(done) {
        //uncomment below and update the code to test expireCombinedSubmission
        //instance.expireCombinedSubmission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('expireSubmission', function() {
      it('should call expireSubmission successfully', function(done) {
        //uncomment below and update the code to test expireSubmission
        //instance.expireSubmission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('generatePdf', function() {
      it('should call generatePdf successfully', function(done) {
        //uncomment below and update the code to test generatePdf
        //instance.generatePdf(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('generatePreview', function() {
      it('should call generatePreview successfully', function(done) {
        //uncomment below and update the code to test generatePreview
        //instance.generatePreview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCombinedSubmission', function() {
      it('should call getCombinedSubmission successfully', function(done) {
        //uncomment below and update the code to test getCombinedSubmission
        //instance.getCombinedSubmission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDataRequest', function() {
      it('should call getDataRequest successfully', function(done) {
        //uncomment below and update the code to test getDataRequest
        //instance.getDataRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFullTemplate', function() {
      it('should call getFullTemplate successfully', function(done) {
        //uncomment below and update the code to test getFullTemplate
        //instance.getFullTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPresignUrl', function() {
      it('should call getPresignUrl successfully', function(done) {
        //uncomment below and update the code to test getPresignUrl
        //instance.getPresignUrl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSubmission', function() {
      it('should call getSubmission successfully', function(done) {
        //uncomment below and update the code to test getSubmission
        //instance.getSubmission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSubmissionBatch', function() {
      it('should call getSubmissionBatch successfully', function(done) {
        //uncomment below and update the code to test getSubmissionBatch
        //instance.getSubmissionBatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTemplate', function() {
      it('should call getTemplate successfully', function(done) {
        //uncomment below and update the code to test getTemplate
        //instance.getTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTemplateSchema', function() {
      it('should call getTemplateSchema successfully', function(done) {
        //uncomment below and update the code to test getTemplateSchema
        //instance.getTemplateSchema(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCombinedSubmissions', function() {
      it('should call listCombinedSubmissions successfully', function(done) {
        //uncomment below and update the code to test listCombinedSubmissions
        //instance.listCombinedSubmissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFolders', function() {
      it('should call listFolders successfully', function(done) {
        //uncomment below and update the code to test listFolders
        //instance.listFolders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSubmissions', function() {
      it('should call listSubmissions successfully', function(done) {
        //uncomment below and update the code to test listSubmissions
        //instance.listSubmissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTemplateSubmissions', function() {
      it('should call listTemplateSubmissions successfully', function(done) {
        //uncomment below and update the code to test listTemplateSubmissions
        //instance.listTemplateSubmissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTemplates', function() {
      it('should call listTemplates successfully', function(done) {
        //uncomment below and update the code to test listTemplates
        //instance.listTemplates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('moveFolderToFolder', function() {
      it('should call moveFolderToFolder successfully', function(done) {
        //uncomment below and update the code to test moveFolderToFolder
        //instance.moveFolderToFolder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('moveTemplateToFolder', function() {
      it('should call moveTemplateToFolder successfully', function(done) {
        //uncomment below and update the code to test moveTemplateToFolder
        //instance.moveTemplateToFolder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publishTemplateVersion', function() {
      it('should call publishTemplateVersion successfully', function(done) {
        //uncomment below and update the code to test publishTemplateVersion
        //instance.publishTemplateVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('renameFolder', function() {
      it('should call renameFolder successfully', function(done) {
        //uncomment below and update the code to test renameFolder
        //instance.renameFolder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restoreTemplateVersion', function() {
      it('should call restoreTemplateVersion successfully', function(done) {
        //uncomment below and update the code to test restoreTemplateVersion
        //instance.restoreTemplateVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('testAuthentication', function() {
      it('should call testAuthentication successfully', function(done) {
        //uncomment below and update the code to test testAuthentication
        //instance.testAuthentication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDataRequest', function() {
      it('should call updateDataRequest successfully', function(done) {
        //uncomment below and update the code to test updateDataRequest
        //instance.updateDataRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTemplate', function() {
      it('should call updateTemplate successfully', function(done) {
        //uncomment below and update the code to test updateTemplate
        //instance.updateTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTemplateDocument', function() {
      it('should call updateTemplateDocument successfully', function(done) {
        //uncomment below and update the code to test updateTemplateDocument
        //instance.updateTemplateDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTemplateDocumentFromUpload', function() {
      it('should call updateTemplateDocumentFromUpload successfully', function(done) {
        //uncomment below and update the code to test updateTemplateDocumentFromUpload
        //instance.updateTemplateDocumentFromUpload(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
