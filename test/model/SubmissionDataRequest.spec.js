/**
 * DocSpring API
 * Use DocSpring's API to programmatically fill out PDF forms, convert HTML to PDFs, merge PDFs, or request legally binding e-signatures.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DocSpring);
  }
}(this, function(expect, DocSpring) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DocSpring.SubmissionDataRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SubmissionDataRequest', function() {
    it('should create an instance of SubmissionDataRequest', function() {
      // uncomment below and update the code to test SubmissionDataRequest
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be.a(DocSpring.SubmissionDataRequest);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

    it('should have the property order (base name: "order")', function() {
      // uncomment below and update the code to test the property order
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

    it('should have the property sort_order (base name: "sort_order")', function() {
      // uncomment below and update the code to test the property sort_order
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

    it('should have the property fields (base name: "fields")', function() {
      // uncomment below and update the code to test the property fields
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

    it('should have the property viewed_at (base name: "viewed_at")', function() {
      // uncomment below and update the code to test the property viewed_at
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

    it('should have the property completed_at (base name: "completed_at")', function() {
      // uncomment below and update the code to test the property completed_at
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

    it('should have the property data (base name: "data")', function() {
      // uncomment below and update the code to test the property data
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

    it('should have the property auth_type (base name: "auth_type")', function() {
      // uncomment below and update the code to test the property auth_type
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

    it('should have the property auth_second_factor_type (base name: "auth_second_factor_type")', function() {
      // uncomment below and update the code to test the property auth_second_factor_type
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

    it('should have the property auth_provider (base name: "auth_provider")', function() {
      // uncomment below and update the code to test the property auth_provider
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

    it('should have the property auth_session_started_at (base name: "auth_session_started_at")', function() {
      // uncomment below and update the code to test the property auth_session_started_at
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

    it('should have the property auth_session_id_hash (base name: "auth_session_id_hash")', function() {
      // uncomment below and update the code to test the property auth_session_id_hash
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

    it('should have the property auth_user_id_hash (base name: "auth_user_id_hash")', function() {
      // uncomment below and update the code to test the property auth_user_id_hash
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

    it('should have the property auth_username_hash (base name: "auth_username_hash")', function() {
      // uncomment below and update the code to test the property auth_username_hash
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

    it('should have the property auth_phone_number_hash (base name: "auth_phone_number_hash")', function() {
      // uncomment below and update the code to test the property auth_phone_number_hash
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

    it('should have the property ip_address (base name: "ip_address")', function() {
      // uncomment below and update the code to test the property ip_address
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

    it('should have the property user_agent (base name: "user_agent")', function() {
      // uncomment below and update the code to test the property user_agent
      //var instance = new DocSpring.SubmissionDataRequest();
      //expect(instance).to.be();
    });

  });

}));
